// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package localeswitcher.actions;

import java.util.HashMap;
import java.util.List;
import system.proxies.Language;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.ILanguage;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class CheckLanguage extends CustomJavaAction<IMendixObject>
{
	private java.lang.String LocaleStr;

	public CheckLanguage(IContext context, java.lang.String LocaleStr)
	{
		super(context);
		this.LocaleStr = LocaleStr;
	}

	@Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		ILanguage defaultLang = Core.getDefaultLanguage();
		
		IContext context = Core.createSystemContext();
		
		if( this.LocaleStr != null && !"".equals(this.LocaleStr.trim()) ) {
			
			IMendixObject fullMatch = null, sameLanguage = null;
			
			String langCode = this.LocaleStr.substring(0,2);
			this.LocaleStr = this.LocaleStr.replace("-", "_");
			
			List<IMendixObject> languageList = Core.retrieveXPathQueryEscaped(context, "//%s", Integer.MAX_VALUE, 0, sortMap, 0, Language.entityName);
			
			for( IMendixObject lang : languageList ) {
				String langStr = lang.getValue(context, Language.MemberNames.Code.toString()); 
				if( this.LocaleStr.equals(langStr) ) {
					Core.getLogger(this.toString()).info("Found locale match for users: " + this.getContext().getSession().getUser().getName() + " - Locale [Browser:" + this.LocaleStr + "] [Mx:" + langStr + "]");
					fullMatch = lang;
				}
				else if( sameLanguage != null && langStr.startsWith( langCode ) ) {
					Core.getLogger(this.toString()).info("Found language match for users: " + this.getContext().getSession().getUser().getName() + " - Locale [Browser:" + this.LocaleStr + "] [Mx:" + langStr + "]");
					sameLanguage = lang;
				}
				
				if( fullMatch != null && sameLanguage != null )
					break;
			}
			
			if( fullMatch != null ) 
				return fullMatch;
			
			if( sameLanguage != null )
				return sameLanguage;
		}
		
		
		return defaultLang.getMendixObject();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "CheckLanguage";
	}

	// BEGIN EXTRA CODE
	
	private static HashMap<String, String> sortMap = getSortMap();
	
	private static final HashMap<String, String> getSortMap( ) {
		HashMap<String, String> map = new HashMap<String, String>();
		
		map.put("Code", "ASC");
		return map;
	}
	// END EXTRA CODE
}
